"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" vim-plug
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
call plug#begin('~/.vim/plugged')

"Spacemacs (use local vim-spacemacs if possible)
if !empty(glob("~/repos/vim-spacemacs"))
  Plug '~/repos/vim-spacemacs'
else
  Plug 'jimmay5469/vim-spacemacs'
endif

"Good defaults
Plug 'tpope/vim-sensible'
"Plug 'PreserveNoEOL' "required for editorconfig-vim
Plug 'editorconfig/editorconfig-vim'

"Navigation
Plug 'tpope/vim-vinegar'
Plug 'kien/ctrlp.vim'
Plug 'rking/ag.vim'

"Pane navigation
Plug 'christoomey/vim-tmux-navigator'

"Theme
Plug 'romainl/Apprentice'
Plug 'ap/vim-css-color'

"Git
Plug 'tpope/vim-fugitive'

"Syntax hightlighting
Plug 'pangloss/vim-javascript'
Plug 'mxw/vim-jsx'
Plug 'mustache/vim-mustache-handlebars'

"better autochdir
Plug 'airblade/vim-rooter'

"autocomplete
Plug 'Valloric/YouCompleteMe', { 'do': './install.py' }
Plug 'marijnh/tern_for_vim', { 'do': 'npm install' }

call plug#end()


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"line numbers
set number

"tabs
set tabstop=2
set shiftwidth=2

"highlight search
set hlsearch

":e autocomplete settings
set wildmenu
set wildmode=longest:list,full

"don't create swap files
set nobackup
set nowritebackup
set noswapfile

"Ignores
set wildignore+=*tmp/*,*node_modules/*,*bower_components/*,*.git/*

"EditorConfig settings
let g:EditorConfig_exclude_patterns = ['fugitive://.*']

"don't timeout commands so quickly
set timeoutlen=10000

"better autochdir
let g:rooter_silent_chdir = 1

"folding
set foldmethod=indent
set nofoldenable

"autocomplete
autocmd CompleteDone * pclose "close docs preview after autocomplete


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Statusline/Tabline
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
function! ShortPath(path)
  let cwd = substitute(a:path, $HOME, "~", "")
  return substitute(cwd, "\\~/repos/", "", "")
endfunction
function! ShortFilepath()
  return ShortPath(expand("%f"))
endfunction
function! ShortCWD()
  return ShortPath(getcwd())
endfunction
function! IsModified()
  return &modified?"[+]":""
endfunction

"Statusline
function! StatusLine()
  let s = ''
  let s .= '%{IsModified()}%r' "File status
  let s .= ' %{ShortFilepath()}'
  let s .= '%=%L ' "Right align line numbers
  return s
endfunction
set statusline=%!StatusLine()

"Tabline
set showtabline=2
function! Tabline()
  let s = ''
  for i in range(tabpagenr('$'))
    let tab = i + 1
    let winnr = tabpagewinnr(tab)
    let buflist = tabpagebuflist(tab)
    let bufnr = buflist[winnr - 1]
    let bufname = bufname(bufnr)

    let s .= '%' . tab . 'T'
    let s .= (tab == tabpagenr() ? '%#TabLineSel#' : '%#TabLine#')
    let s .= (bufname != '' ? '['. fnamemodify(bufname, ':t') . ']' : '[No Name]')
  endfor

  let s .= '%#TabLineFill#'

  " right-align the CWD
  let s .= '%=%#TabLineSel#[%{ShortCWD()}]'

  return s
endfunction
set tabline=%!Tabline()


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Style
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

"Syntax highlighting
set background=dark
silent! colorscheme apprentice

"gvim options
if has("gui_running")
  "remove scrollbars
  set guioptions-=l
  set guioptions-=L
  set guioptions-=r
  set guioptions-=b

  "set fonts and background
  set transparency=5
  set lines=70
  set columns=250
endif


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Key Bindings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let mapleader = "\<SPACE>"

nnoremap <LEADER>br :checktime<CR>
nnoremap <LEADER>pp :e ~/repos/

"Reload vim-spacemacs if it is local
if !empty(glob("~/repos/vim-spacemacs"))
  nnoremap <LEADER>feR :source ~/.vimrc<CR>:source ~/repos/vim-spacemacs/plugin/spacemacs.vim<CR>
endif
