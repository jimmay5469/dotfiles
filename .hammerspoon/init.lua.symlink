local margin = 10
local stepSize = 40
hs.window.animationDuration = 0

local windowStatuses = {}
function getWindowStatus(win)
  local id = win:id()
  local status = windowStatuses[id]

  if status == nil then
    local winFrame = win:frame()
    status = {}
    windowStatuses[id] = status
    status.customW = winFrame.w
    status.customH = winFrame.h
    status.size = "CUSTOM"
  end

  return status
end

function hyperBind(key, fn)
  hs.hotkey.bind({"cmd", "alt", "ctrl"}, key, fn)
  hs.hotkey.bind({"cmd", "alt", "ctrl", "shift"}, key, fn)
end

hyperBind("w", function()
  hs.alert.show("Hello World!")
end)

hs.alert.show("Welcome!")
hyperBind("r", function()
  hs.alert.show("Reloading config...")
  hs.timer.doAfter(0.1, hs.reload)
end)

function resize(win)
  local winFrame = win:frame()
  local screen = win:screen()
  local screenFrame = screen:frame()
  local status = getWindowStatus(win)

  if status.size == "CUSTOM" then
    winFrame.w = screenFrame.w - 150 > 1700 and 1700 or screenFrame.w - 150
    winFrame.h = screenFrame.h - 75 > 1100 and 1100 or screenFrame.h - 75
    status.size = "GOLDEN"
    hs.alert.show("Golden")
  else
    winFrame.w = status.customW
    winFrame.h = status.customH
    status.size = "CUSTOM"
    hs.alert.show("Custom")
  end

  win:setFrame(winFrame)
end

function move(win, yPosition, xPosition)
  local winFrame = win:frame()
  local screen = win:screen()
  local screenFrame = screen:frame()
  local status = getWindowStatus(win)

  local min = {
    x = screenFrame.x + margin,
    y = screenFrame.y + margin
  }
  local max = {
    x = screenFrame.x + screenFrame.w - winFrame.w - margin,
    y = screenFrame.y + screenFrame.h - winFrame.h - margin
  }
  local xPositions = {
    ["LEFT"] = min.x,
    ["CENTER"] = (min.x + max.x) / 2,
    ["RIGHT"] = max.x
  }
  local yPositions = {
    ["TOP"] = min.y,
    ["CENTER"] = (min.y + max.y) / 2,
    ["BOTTOM"] = max.y
  }

  winFrame.x = xPositions[xPosition]
  winFrame.y = yPositions[yPosition]
  status.xPosition = xPosition
  status.yPosition = yPosition

  win:setFrame(winFrame)
end

function moveOrResize(win, yPosition, xPosition)
  local status = getWindowStatus(win)

  if status.yPosition == yPosition and status.xPosition == xPosition then
    resize(win)
  end

  move(win, yPosition, xPosition)
end

hyperBind("y", function()
  moveOrResize(hs.window.focusedWindow(), "TOP", "LEFT")
end)

hyperBind("u", function()
  moveOrResize(hs.window.focusedWindow(), "TOP", "CENTER")
end)

hyperBind("i", function()
  moveOrResize(hs.window.focusedWindow(), "TOP", "RIGHT")
end)

hyperBind("h", function()
  moveOrResize(hs.window.focusedWindow(), "CENTER", "LEFT")
end)

hyperBind("j", function()
  moveOrResize(hs.window.focusedWindow(), "CENTER", "CENTER")
end)

hyperBind("k", function()
  moveOrResize(hs.window.focusedWindow(), "CENTER", "RIGHT")
end)

hyperBind("n", function()
  moveOrResize(hs.window.focusedWindow(), "BOTTOM", "LEFT")
end)

hyperBind("m", function()
  moveOrResize(hs.window.focusedWindow(), "BOTTOM", "CENTER")
end)

hyperBind(",", function()
  moveOrResize(hs.window.focusedWindow(), "BOTTOM", "RIGHT")
end)

hyperBind("c", function()
  local win = hs.window.focusedWindow()
  local winFrame = win:frame()
  local status = getWindowStatus(win)

  status.customW = winFrame.w
  status.customH = winFrame.h
  status.size = "CUSTOM"
end)

hyperBind("[", function()
  local win = hs.window.focusedWindow()
  local winFrame = win:frame()
  local screen = win:screen()
  local screenFrame = screen:frame()
  local status = getWindowStatus(win)

  status.xPosition = nil
  status.yPosition = nil

  winFrame.x = screenFrame.x + margin
  winFrame.y = screenFrame.y + margin
  winFrame.w = screenFrame.w / 2 - margin * 1.5
  winFrame.h = screenFrame.h - margin * 2

  win:setFrame(winFrame)
end)

hyperBind("]", function()
  local win = hs.window.focusedWindow()
  local winFrame = win:frame()
  local screen = win:screen()
  local screenFrame = screen:frame()
  local status = getWindowStatus(win)

  status.xPosition = nil
  status.yPosition = nil

  winFrame.x = screenFrame.x + (screenFrame.w / 2) + margin / 2
  winFrame.y = screenFrame.y + margin
  winFrame.w = screenFrame.w / 2 - margin * 1.5
  winFrame.h = screenFrame.h - margin * 2

  win:setFrame(winFrame)
end)

hyperBind("=", function()
  local win = hs.window.focusedWindow()
  local winFrame = win:frame()
  local status = getWindowStatus(win)

  if winFrame.w > winFrame.h then
    winFrame.w = winFrame.w + stepSize
    winFrame.h = winFrame.h + stepSize * winFrame.h / winFrame.w
  else
    winFrame.w = winFrame.w + stepSize * winFrame.w / winFrame.h
    winFrame.h = winFrame.h + stepSize
  end

  status.customW = winFrame.w
  status.customH = winFrame.h
  status.size = "CUSTOM"

  win:setFrame(winFrame)

  if status.yPosition and status.xPosition then
    move(win, status.yPosition, status.xPosition)
  end
end)

hyperBind("-", function()
  local win = hs.window.focusedWindow()
  local winFrame = win:frame()
  local status = getWindowStatus(win)

  if winFrame.w > winFrame.h then
    winFrame.w = winFrame.w - stepSize
    winFrame.h = winFrame.h - stepSize * winFrame.h / winFrame.w
  else
    winFrame.w = winFrame.w - stepSize * winFrame.w / winFrame.h
    winFrame.h = winFrame.h - stepSize
  end

  status.customW = winFrame.w
  status.customH = winFrame.h
  status.size = "CUSTOM"

  win:setFrame(winFrame)

  if status.yPosition and status.xPosition then
    move(win, status.yPosition, status.xPosition)
  end
end)
